// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationCore.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Introduction to Programming",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Web Development Fundamentals",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Database Design and Management",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.CourseStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("CoursesStudents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2000, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "Group A",
                            Name = "Alice",
                            Surname = "Johnson"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1998, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "Group B",
                            Name = "Michael",
                            Surname = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2001, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "Group A",
                            Name = "Sophia",
                            Surname = "Martinez"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1999, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "Group B",
                            Name = "Emma",
                            Surname = "Wilson"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2002, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupName = "Group A",
                            Name = "James",
                            Surname = "Taylor"
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkExperienceFullYears")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1975, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John",
                            Surname = "Doe",
                            WorkExperienceFullYears = 10
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1982, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emily",
                            Surname = "Smith",
                            WorkExperienceFullYears = 8
                        });
                });

            modelBuilder.Entity("ApplicationCore.Entities.Course", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ApplicationCore.Entities.CourseStudent", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Course", "Course")
                        .WithMany("CoursesStudents")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Student", "Student")
                        .WithMany("CoursesStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Course", b =>
                {
                    b.Navigation("CoursesStudents");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Student", b =>
                {
                    b.Navigation("CoursesStudents");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
